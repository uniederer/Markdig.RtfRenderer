name: Build and Publish NuGet Package

on:
  push:
    tags:
      - 'v*'  # Dieses Muster sorgt dafür, dass der Workflow nur für Tags ausgelöst wird, die mit 'v' beginnen
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Wichtig für das Zählen der Commits und Tags

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    
    - name: Calculate new version
      run: |
        echo "Calculating version number..."
        TAG_COUNT=$(git tag | wc -l)
        echo "Found $TAG_COUNT existing tags."
        NEW_VERSION="1.0.$((TAG_COUNT + 1))"
        echo "New version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      shell: bash

    - name: Build with dotnet
      run: dotnet build ./Markdig.RtfRenderer/Markdig.RtfRenderer.csproj --configuration Release -p:Version=$NEW_VERSION
      shell: bash

    - name: Pack with dotnet
      run: dotnet pack ./Markdig.RtfRenderer/Markdig.RtfRenderer.csproj --configuration Release --output nupkgs -p:Version=$NEW_VERSION
      shell: bash

    - name: Print working directory
      run: pwd
      shell: bash

    - name: Push package to NuGet
      run: dotnet nuget push "D:/a/Markdig.RtfRenderer/Markdig.RtfRenderer/nupkgs/MarkdigExtensions.RtfRenderer.${{ env.NEW_VERSION }}.nupkg" --api-key oy2azzqb3gn3jfxxkqfqa542chcexffubiiu5itup6uw2a --source https://api.nuget.org/v3/index.json
      shell: bash
