name: Build and Publish NuGet Package

on:
  push:
    tags:
      - 'release/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  set-env:
    name: ‚öõ Create Environment
    runs-on: ubuntu-latest
    steps:
    - name: Set version
      run: |
        echo "BUILD_VERSION=${GITHUB_REF##*/v}" >> $GITHUB_ENV
    outputs:
      BUILD_VERSION: ${{env.BUILD_VERSION}}
      
  build:
    name: ‚öôÔ∏è Build and publish library
    runs-on: windows-latest
    needs: set-env
      
    steps:
    - name: üöö Get v${{needs.set-env.outputs.BUILD_VERSION}} code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Wichtig f√ºr das Z√§hlen der Commits und Tags

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: ‚öôÔ∏è Build library
      run: dotnet build ./MarkdigExtensions.RtfRenderer/MarkdigExtensions.RtfRenderer.csproj --configuration Release -p:Version=${{needs.set-env.outputs.BUILD_VERSION}}
      shell: bash

    - name: üì¶ Pack NuGet Package
      run: dotnet pack ./MarkdigExtensions.RtfRenderer/MarkdigExtensions.RtfRenderer.csproj --configuration Release --output nupkgs -p:Version=${{needs.set-env.outputs.BUILD_VERSION}}
      shell: bash

    - name: ‚úì Craft release v${{needs.set-env.outputs.BUILD_VERSION}}
      uses: ncipollo/release-action@v1
      with:
        name: v${{needs.set-env.outputs.BUILD_VERSION}}
        artifacts: ./MarkdigExtensions.RtfRenderer/MarkdigExtensions.RtfRenderer/nupkgs/MarkdigExtensions.RtfRenderer.${{needs.set-env.outputs.BUILD_VERSION}}.nupkg
        allowUpdates: true
        replacesArtifacts: true
        draft: false
        prerelease: false
        
    - name: üéâ Push package to NuGet
      run: dotnet nuget push "D:/a/MarkdigExtensions.RtfRenderer/MarkdigExtensions.RtfRenderer/nupkgs/MarkdigExtensions.RtfRenderer.${{needs.set-env.outputs.BUILD_VERSION}}.nupkg" --api-key  ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
      shell: bash
